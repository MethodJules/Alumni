<?php


/**
 * Implements hook_field_info().
 */
function alumni_field_taxonomy_list_field_info()
{
    return array(
        'alumni_taxonomy_list' => array(
            'label' => t('Taxonomie Liste'),
            'description' => t('Select Feld mit Auswahl einer Taxonomie'),
            'default_widget' => 'alumni_taxonomy_list_widget',
            'default_formatter' => 'alumni_taxonomy_list_formatter',
        ),
    );
}

/**
 * Implements hook_field_is_empty().
 */
function alumni_field_taxonomy_list_field_is_empty($item, $field)
{
    return empty($item['alumni_taxonomy_list']);
}

/**
 * Implements hook_field_formatter_info().
 */
function alumni_field_taxonomy_list_field_formatter_info() {
    return array(
        'alumni_taxonomy_list_formatter' => array(
            'label' => t('Standard'),
            'field types' => array('alumni_taxonomy_list'),
        ),
    );
}


/**
 * Implements hook_field_formatter_view().
 */
function alumni_field_taxonomy_list_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)
{
    $element = array();

    switch ($display['type']) {
        case 'alumni_taxonomy_list_formatter':
            foreach ($items as $delta => $item) {
                $element[$delta] = array(
                    '#markup' => $item['alumni_taxonomy_list'],
                );
            }
            break;
    }

    return $element;
}

/**
 * Implements hook_field_widget_info().
 */
function alumni_field_taxonomy_list_field_widget_info() {

    return array(
        'alumni_taxonomy_list_widget' => array(
            'label' => t('Auswahlliste'),
            'field types' => array('alumni_taxonomy_list'),
        ),
    );
}



/**
 * Implements hook_field_widget_form().
 */
function alumni_field_taxonomy_list_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)
{
    $value = isset($items[$delta]['alumni_taxonomy_list']) ? $items[$delta]['alumni_taxonomy_list'] : '';
    switch ($instance['widget']['type']) {
        case 'alumni_taxonomy_list_widget':

            $settings = $field['settings'];

            $vocab = taxonomy_vocabulary_machine_name_load($settings['taxonomy_list_select']);
            $vid = $vocab->vid;

            $taxonomy = taxonomy_get_tree($vid);

            $options = array();

            if ($settings['taxonomy_level'] === 'one_level') {

                foreach ($taxonomy as $data) {

                    $options[$data->name] = $data->name;
                }
            }

            if ($settings['taxonomy_level'] === 'two_level') {

                foreach ($taxonomy as $data) {

                    if ($data->parents[0] === '0') {
                        $children = taxonomy_get_children($data->tid);
                        //dvm($children);
                        foreach ($children as $child) {
                            $options[$data->name][$child->name] = $child->name;
                        }
                    }
                }
            }


            $element['alumni_taxonomy_list'] = array(
                '#type' => 'select',
                '#title' => $element['#title'],
                '#description' => $element['#description'],
                '#default_value' => $value,
                '#empty_option' => t('- Keine -'),
                '#options' => $options,
                '#required' => $element['#required'],
                '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
                '#delta' => $delta,
            );
            break;
    }
    return $element;
}

/**
 * Implements hook_field_settings_form().
 */
function alumni_field_taxonomy_list_field_settings_form($field, $instance, $has_data)
{
    $form = array();

    $taxonomies = taxonomy_get_vocabularies();
    $options = array();

    foreach ($taxonomies as $tax) {
        $options[$tax->machine_name] = $tax->machine_name;
    }

    $settings = $field['settings'];

    $form['taxonomy_list_select'] = array(
        '#type' => 'select',
        '#title' => t('Systemname der Taxonomie fÃ¼r Interessen'),
        '#options' => $options,
        '#default_value' => isset($settings['taxonomy_list_select']) ? $settings['taxonomy_list_select'] : '',
        '#empty_option' => t('- Keine -'),
        '#required' => TRUE,
    );


    $form['taxonomy_level'] = array(
        '#type' => 'radios',
        '#title' => t('Ebenen der Taxonomie'),
        '#default_value' => isset($settings['taxonomy_level']) ? $settings['taxonomy_level'] : '',
        '#options' => array(
            'one_level' => t('eine Ebene'),
            'two_level' => t('zwei Ebenen'),
        ),
        '#required' => TRUE,
    );

    return $form;
}